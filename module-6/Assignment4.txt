Adding User Authentication

Objective: To teach students how to add user authentication to a Ruby on Rails application.

Task:

In this assignment, students will learn how to integrate user authentication into their Ruby on Rails application using the popular authentication gem, Devise. They will configure and customize Devise to meet the specific requirements of their project, including implementing user registration, login, and logout functionality.

Instructions:

Integration of Devise:

Instruct students to integrate the Devise gem into their Ruby on Rails application by adding it to the Gemfile and running bundle install.
Demonstrate how to install Devise by generating the necessary files and migrations using the following command:



rails generate devise:install


Guide students to follow the setup instructions provided by Devise, which may include setting up the default URL options in config/environments/development.rb and configuring the config/environments/production.rb file for production.
User Model Configuration:

Encourage students to customize the User model generated by Devise based on their project's requirements. They can add additional attributes and validations to the user model.
Explain how to generate and apply migrations for these changes to the user model.
Views and Routes:

Assist students in generating the Devise views for registration, login, and password management using the following command:


rails generate devise:views


Instruct students to set up appropriate routes in the config/routes.rb file for user registration, login, logout, and password management.
Customization (Optional):

If students want to customize the appearance or behavior of Devise views, guide them through modifying the generated views and adding CSS styles.
Testing:

Encourage students to test user registration, login, and logout functionality to ensure that Devise is functioning correctly.
Discuss the importance of testing authentication features to maintain security and functionality.
Documentation:

Require students to provide documentation or comments in their code to explain the purpose and customization of the authentication system.
Evaluation Criteria:

Successful integration of the Devise gem into the Rails application.
Customization and configuration of the User model to match project requirements.
Generation and setup of Devise views and routes.
Testing of user registration, login, and logout functionality.
Optional: Customization of Devise views or styles.
Clear documentation or comments explaining the authentication system and any customizations made.